// AnimUI.cpp: implementation of the AnimUI class.
//
//////////////////////////////////////////////////////////////////////
#include "..\pch.h"

#include "AnimUI.h"
 
//////////////////////////////////////////////////////////////////////
// Construction/Destruction
//////////////////////////////////////////////////////////////////////

AnimUI::AnimUI() : currentFrame( 0 ), stillState( false )
{

}

AnimUI::~AnimUI()
{
    unsigned int i;
    for( i = 0; i < frames.size(); i++ ){
        delete frames[i];
    }

}

//////////////////////////////////////////////////////////////////////////////////////////
void AnimUI::Draw
//////////////////////////////////////////////////////////////////////////////////////////
//  Draws the animation UI.
// 
(
 V2SPRITEFX *vsfFx // The V2SPRITEFX
)
//////////////////////////////////////////////////////////////////////////////////////////
{    
    LOG << "\r\nDRAWING AN ANIMATION OBJECT!!";
    if( currentFrame >= frames.size() )
    {
        currentFrame = 0;
    }

    LOG.Lock();
    LOG << "\r\nDRAWING THE FRAME " << currentFrame << "..!";
    LOG.Unlock();
    frames[ currentFrame ]->Draw( vsfFx );
    if( !stillState ){
        // Animate
        currentFrame++;
    }
}

//////////////////////////////////////////////////////////////////////////////////////////
void AnimUI::AddFrame
//////////////////////////////////////////////////////////////////////////////////////////
//  Adds a frame to the animation.
// 
(
 std::string frameId, // The frame Id.
 bool bDrawAlpha
)
//////////////////////////////////////////////////////////////////////////////////////////
{
    GraphUI *newFrame = new GraphUI;

    newFrame->SetSpriteId( frameId );
    newFrame->Show();
    newFrame->SetPos( GetPos() );
    newFrame->DrawAlpha(bDrawAlpha);
    
    frames.push_back( newFrame );
}

//////////////////////////////////////////////////////////////////////////////////////////
void AnimUI::LoadSequence
//////////////////////////////////////////////////////////////////////////////////////////
// 
// 
(
 std::string seedId,    // The seed Id.
 DWORD frameQty,         // The quantity of frames.
 bool bSemiTrans
)
//////////////////////////////////////////////////////////////////////////////////////////
{
    char curFrame = 'a';

    seedId += "-";
    
    DWORD i;
    for( i = 0; i < frameQty; i++ ){
        string frameId( seedId );
        frameId += curFrame;
        curFrame++;
        AddFrame( frameId ,bSemiTrans);
    }

}

//////////////////////////////////////////////////////////////////////////////////////////
void AnimUI::Stop( void )
//////////////////////////////////////////////////////////////////////////////////////////
//  Stops the animation and resets the current frame to 0.
// 
//////////////////////////////////////////////////////////////////////////////////////////
{
    stillState = true;
    currentFrame = 0;
}